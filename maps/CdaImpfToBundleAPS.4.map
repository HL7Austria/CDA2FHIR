map "http://hl7.at/fhir/HL7ATCoreProfiles/4.0.1/StructureMap/at-cda-to-bundle" = "CdaToBundle"

// Concept Maps 

conceptmap "eImpf-ZusatzklassifikationTov3ServiceDeliveryLocationRoleType" {
  prefix s = "https://termgit.elga.gv.at/ValueSet/eimpf-zusatzklassifikation"
  prefix t = "http://terminology.hl7.org/ValueSet/v3-ServiceDeliveryLocationRoleType"

  s:"IS001" == t:"SCHOOL"
  s:"IS002" == t:"WORK"
  // s:"IS003" == t:"IS003" //	Krankenhaus inkl. Kur- und Rehaeinrichtungen
  s:"IS004" == t:"PROFF"
  // s:"IS005" == t:"IS005" //Öffentliche Impfstelle
  // s:"IS006" == t:"IS006" //Wohnbereich
  // s:"IS007" == t:"IS007" // Öffentliche Impfstraße / Impfbus
  s:"IS008" == t:"NCFF"
}

// Source 
uses "http://hl7.org/cda/stds/core/StructureDefinition/ClinicalDocument" alias ClinicalDocument as source
uses "http://hl7.org/cda/stds/core/StructureDefinition/Material" alias Material as source
uses "http://hl7.org/cda/stds/core/StructureDefinition/Participant2" alias Participant2 as source 

// Target 
uses "http://hl7.org/fhir/4.3/StructureDefinition/Bundle" alias Bundle as target
// uses "https://fhir.hl7.at/elga/aps/r4/StructureDefinition/at-aps-bundle" alias Bundle as target 
//uses "https://fhir.hl7.at/elga/aps/r4/StructureDefinition/at-aps-composition" alias Composition as target
uses "http://hl7.org/fhir/4.3/StructureDefinition/Immunization" alias Immunization as target

imports "http://hl7.at/fhir/HL7ATCoreProfiles/4.0.1/StructureMap/at-cda-to-fhir-types"




group CdaToFhirBundle(source cda: ClinicalDocument, target fhir_bundle: Bundle){

  // cda -> 
  //   fhir_bundle.id = uuid(),
  //   fhir_bundle.type = 'document',
  //   fhir_bundle.meta as fhir_bundle_meta,
  //   fhir_bundle_meta.profile = 'https://fhir.hl7.at/elga/aps/r4/StructureDefinition/at-aps-bundle' 
  //   "FhirBundleMetadata";

//cda.id -> fhir_bundle.identifier "identifier";
cda.effectiveTime -> fhir_bundle.timestamp;
cda.id -> fhir_bundle.identifier; 
cda ->
    // create the composition to have it as reference for later transformations
    fhir_bundle.entry as fhir_bundle_entry_1,
    fhir_bundle_entry_1.resource = create('Composition') as fhir_composition,
    fhir_composition.id = uuid() as fhir_composition_uuid,
    fhir_bundle_entry_1.fullUrl = append('urn:uuid:', fhir_composition_uuid),
    // create the patient to have it as reference for later transformations
    fhir_bundle.entry as fhir_bundle_entry_2,
    fhir_bundle_entry_2.resource = create('Patient') as fhir_patient,
    fhir_patient.id = uuid() as fhir_patient_uuid,
    fhir_bundle_entry_2.fullUrl = append('urn:uuid:', fhir_patient_uuid),

    // create relation from Composition to Patient
    fhir_composition.subject = create('Reference') as fhir_composition_subject_reference,
    fhir_composition_subject_reference.reference = append('urn:uuid:', fhir_patient_uuid),
    fhir_composition_subject_reference.type = 'Patient';



cda.component as cda_component then {
    cda_component.structuredBody as cda_structuredBody
    then(CdaBodyToFhirComposition(cda_structuredBody, fhir_composition, fhir_patient,  fhir_bundle));  
  };
}

group CdaBodyToFhirComposition(source cda_structuredBody: StructuredBody, target fhir_composition: Composition, target fhir_patient: Patient, target fhir_bundle: Bundle) {
    cda_structuredBody.component as cda_component then {
        cda_component.section as cda_section where code.where(code='11369-6' and codeSystem='2.16.840.1.113883.6.1') -> fhir_composition.section as fhir_section then CdaHistoryOfImmunizationSectionToFhirCompositionSection(cda_section, fhir_section, fhir_patient, fhir_bundle);
        cda_component.section as cda_history_of_past_illness_section where code.where(code='11348-0' and codeSystem='2.16.840.1.113883.6.1') -> fhir_composition.section as fhir_section_2 then CdaHistoryOfPastIllnessSectionToFhirCompositionSection(cda_history_of_past_illness_section, fhir_section_2, fhir_bundle);
    
      };
    }

group CdaHistoryOfPastIllnessSectionToFhirCompositionSection(source cda_history_of_past_illness_section: Section, source fhir_section_2, target fhir_bundle: Bundle) {

  // cda_section_of_past_illness_section -> 
  //  fhir_section_2.id as fhir_section_2_id,
  //  cda_history_of_past_illness_section.id as cda_section_id then  II(cda_section_id,fhir_section_2_id);
  cda_history_of_past_illness_section.title -> fhir_section_2.title;
  cda_history_of_past_illness_section.code -> fhir_section_2.code.coding;
  //cda_history_of_past_illness_section.text as cda_text -> fhir_section_2.text = (cda_text.xmlText)
  cda_history_of_past_illness_section.entry as cda_section_entry then {

     // ClinicalDocument/component/structuredBody/component/section/entry/act 
     cda_section_entry.act as cda_act then {

      cda_act -> fhir_bundle.entry as fhir_bundle_entry_4,
      fhir_bundle_entry_4.resource = create('Condition') as fhir_condition,
      fhir_condition.id = uuid() as fhir_condition_id,
      fhir_bundle_entry_4.fullUrl = append('urn:uuid:', fhir_condition_id),
      fhir_section_2.entry = create('Reference') as fhir_section_entry_reference,
      fhir_section_entry_reference.reference = append('urn:uuid:', fhir_condition_id),
      fhir_section_entry_reference.type = 'Condition' then CdaImprelevanteErkankungenProblemEntry(cda_act, fhir_condition, fhir_bundle);
     };
   };
}
 

group CdaImprelevanteErkankungenProblemEntry(source cda_act: Act, target fhir_condition: Condition,target fhir_bundle: Bundle){


  // ToDo CDA Author not mapped correctly 
  // // section.author
  // cda_act.author as cda_act_author ->
  //   // create the PractitionerRole in order to capture the author
  //   fhir_bundle.entry as fhir_bundle_entry,
  //   fhir_bundle_entry.resource = create('PractitionerRole') as fhir_practitionerRole,
  //   fhir_practitionerRole.id = uuid() as fhir_practitionerRole_id,
  //   fhir_bundle_entry.fullUrl = append('urn:uuid:', fhir_practitionerRole_id),
  //    = create('Reference') as fhir_act_author_reference,
  //   fhir_act_author_reference.reference = append('urn:uuid:', fhir_practitionerRole_id),
  //   fhir_act_author_reference.type = 'PractitionerRole' then
  //   CdaAuthorToFhirPractitionerRole(cda_act_author, fhir_practitionerRole, fhir_bundle); //hinzufügen der PractitionerRole

  // // ClinicalDocument/component/structuredBody/component/section/entry/act/entryRelationship
  // cda_act.entryRelationship as cda_entryRelationship,
  // // ClinicalDocument/component/structuredBody/component/section/entry/act/entryRelationship/observation
  // cda_entryRelationship.observation as cda_observation then {
  
  // // 1…1 M	//observation/id ->   AtApsCondition.identifier
  // cda_observation.id -> fhir_condition.identifier;
  // // 1…1 M 	//observation/code -> AtApsCondition.category 
  // cda_observation.code -> fhir_condition.category;
  // // cda_observation.effectiveTime as cda_effectiveTime then {
  
  // //   // // 0…1	//observation/effectiveTime/low -> AtApsCondition.onsetDateTime
  // //   // cda_effectiveTime.low as cda_effectiveTime_low where ($this.nullFlavor.exists().not()) then TSDate(cda_effectiveTime_low,fhir_condition.onsetDateTime);
  // //   // // 0…1 	//observation/effectiveTime/high -> AtApsCondition.abatementDateTime
  // //   // cda_effectiveTime.high as cda_effectiveTime_high where $this.exists() then TSDate(cda_effectiveTime_high,fhir_condition.abatementDateTime);
    
    
  // //   // // 0…1	//observation/effectiveTime/low -> AtApsCondition.onsetDateTime
  // //   // cda_effectiveTime.low where ($this.nullFlavor.exists().not()) -> fhir_condition.onsetDateTime;
  // //   // // 0…1 	//observation/effectiveTime/high -> AtApsCondition.abatementDateTime
  // //   // cda_effectiveTime.high -> fhir_condition.abatementDateTime;
  // //   };

  //     // 1…1 M	//observation/value -> AtApsCondition.code
  // cda_observation.value -> fhir_condition.code;

  // };
  }

// 1…1 M	observation.value 
// 1…1 R	observation.value.code
// 1…1 R	obseravtion.value.codeSystem
// 1…1 M	observation.value.originalText
// 0…1 C	observation.participant( Participant Body -Verifier  - 1.2.40.0.34.6.0.11.9.44) 
// 0…1 C	observation.participant (Participant Body - Authorized Editor - 1.2.40.0.34.6.0.11.9.46 )
// 0…1 C	observation.participant (Participant Body - Data Enterer - 1.2.40.0.34.6.0.11.9.47) 
// 0…1 	obervation.entryRelationship( Comment Entry - Single Author- 1.2.40.0.34.6.0.11.3.17 ) 


group CdaHistoryOfImmunizationSectionToFhirCompositionSection(source cda_section: Section, source fhir_section, source fhir_patient: Patient, target fhir_bundle: Bundle) extends CdaSectionToFhirSection {

  cda_section.entry as cda_section_entry then {

    // 1...* //component/structuredBody/component/section/entry/substanceAdministration - 1.2.40.0.34.6.0.11.3.1 Immunization Entry or  1.2.40.0.34.6.0.11.3.28 Immunization Entry Impfung nicht angegeben
    cda_section_entry.substanceAdministration as cda_substanceAdministration then {    

          // create Immunization
          cda_substanceAdministration -> fhir_bundle.entry as fhir_bundle_entry,
          fhir_bundle_entry.resource = create('Immunization') as fhir_immunization,
          fhir_immunization.id = uuid() as fhir_immunization_id,
          fhir_bundle_entry.fullUrl = append('urn:uuid:', fhir_immunization_id),
            fhir_section.entry = create('Reference') as fhir_section_entry_reference,
           fhir_section_entry_reference.reference = append('urn:uuid:', fhir_immunization_id),
           fhir_section_entry_reference.type = 'Immunization' then CdaSubstanceAdministrationToFhirImmunization(cda_substanceAdministration, fhir_immunization, fhir_bundle);

          
}


group CdaSubstanceAdministrationToFhirImmunization(source cda_substanceAdministration: SubstanceAdministration, target fhir_immunization: Immunization,  target fhir_bundle: Bundle) {
    
  /*
      ToDo: 
      - 1...1 M 	//substanceAdministration/text
    */
    //1..1 M 	//substanceAdministration/id --> AtApsImmunization.identifier 
    cda_substanceAdministration.id -> fhir_immunization.identifier;
    // 1..1 M 	//substanceAdministration/statusCode[@code='completed']		Fixer Wert: 'Completed' --> AtApsImmunization.status
    cda_substanceAdministration.statusCode -> fhir_immunization.status;
    // 1..1 M 	//substanceAdministration/effectiveTime --> AtApsImmunization. occurrenceDateTime
    cda_substanceAdministration.effectiveTime as cda_effectiveTime -> fhir_immunization.occurrence = create('dateTime') as fhir_immunization_occurrence then TSDateTime(cda_effectiveTime, fhir_immunization_occurrence) "CdaEffectiveTimeToFhirImmunizationOccurrence";
    // 0...1 	//substanceAdministration/routeCode --> AtApsImmunization.route
    cda_substanceAdministration.routeCode as cda_routeCode where ($this.nullFlavor.exists().not()) -> fhir_immunization.route;
    // 0...1 	//substanceAdministration/doseQuantity --> AtApsImmunization.doseQuantity
    // NullFlavor at cda_doseQuantity - Level --> Assumption that nested DataTypes do not have a NullFlavor
    cda_substanceAdministration.doseQuantity as cda_doseQuantity where ($this.nullFlavor.exists().not()) -> fhir_immunization.doseQuantity;
    // //substanceAdministration/consumable
    cda_substanceAdministration.consumable as cda_consumable,
    //substanceAdministration/consumable/manufacturedProduct
    cda_consumable.manufacturedProduct as cda_manufacturedProduct then {
        // Gruppe die manuFacturedProduct zu FHIR Immunization Mapped. 
      cda_manufacturedProduct then CdaManufacturedMaterialToFhirImmunizationMedication(cda_manufacturedProduct, fhir_immunization, fhir_bundle);
    };

    cda_manufacturedProduct.manufacturedMaterial as cda_manufacturedMaterial then {

      // 1...1 R 	manufracturedProduct.ManufacturedMaterial.code --> AtApsImmunization.vaccineCode
      // fhir_immunization.vaccineCode.text --> Werte werden nicht übernommen.
      // substanceAdministration - consumable: Vaccine Product nicht angegeben - 1.2.40.0.34.6.0.11.9.31
      cda_manufacturedMaterial.code where ($this.nullFlavor = 'NA') then {
        cda_manufacturedMaterial.code as cda_manufacturedMaterial_code,
        cda_manufacturedMaterial_code.nullFlavor ->
        fhir_immunization.vaccineCode as fhir_immunization_vaccineCode,
        fhir_immunization_vaccineCode.extension as fhir_immunization_vaccineCode_extension then CdaNullFlavorToFhirNullFlavor(cda_manufacturedMaterial_code, fhir_immunization_vaccineCode_extension)
        "CdaManufacturedMaterialCodeNullFlavorToFhirImmunizationVaccineCodeDataAbsentReason"; 
      }; 
      
      cda_manufacturedMaterial.code where ($this.nullFlavor.exists().not()) then {

        cda_manufacturedMaterial.code as cda_manufacturedMaterial_code ->
        // 1...1 R 	//manufacturedProduct/manufacturedMaterial/code -> AtApsImmunization.vaccineCode.coding
        fhir_immunization.vaccineCode as fhir_immunization_vaccineCode then CECodeableConcept(cda_manufacturedMaterial_code, fhir_immunization_vaccineCode);

        // "0...1" //manufacturedProduct/manufacturedMaterial/lotNumberText -> AtApsImmunization.lotNumber
        cda_manufacturedMaterial.lotNumberText where ($this.nullFlavor.exists().not()) -> fhir_immunization.lotNumber;
    
        cda_manufacturedProduct.manufacturerOrganization as cda_manufacturerOrganization then {
    
          cda_manufacturerOrganization ->
            fhir_bundle.entry as fhir_bundle_entry,
            fhir_bundle_entry.resource = create('Organization') as fhir_organization,
            fhir_organization.id = uuid() as fhir_organization_id,
            fhir_bundle_entry.fullUrl = append('urn:uuid:', fhir_organization_id),
            fhir_immunization.manufacturer = create('Reference') as fhir_immunization_organization,
            fhir_immunization_organization.reference = append('urn:uuid:', fhir_organization_id),
            fhir_immunization_organization.type = 'Organization' then
            CdaOrganizationCompilationToFhirOrganization(cda_manufacturerOrganization, fhir_organization);
        };
      };
    };

    // Encounter der zu der Immunization gehört. --> Noch nicht gemapped. 
          // cda_substanceAdministration.performer as cda_performer where $this.exists() -> fhir_bundle.entry as fhir_bundle_entry_2,
          // fhir_bundle_entry_2.resource = create('Encounter') as fhir_encounter,
          // fhir_encounter.id = uuid() as fhir_encounter_id,
          // fhir_bundle_entry_2.fullUrl = append('urn:uuid:', fhir_encounter_id),
          // fhir_immunization.encounter = create('Reference') as fhir_immunization_encounter,
          // fhir_immunization_encounter.reference = append('urn:uuid:', fhir_encounter_id),
          // fhir_immunization_encounter.type = 'Encounter',
           cda_substanceAdministration.performer as cda_performer then {
            
            cda_performer -> fhir_bundle.entry as fhir_bundle_entry03,
            fhir_bundle_entry03.resource = create('PractitionerRole') as fhir_practitionerRole,
            fhir_practitionerRole.id = uuid() as fhir_practitionerRole_id,
            fhir_bundle_entry03.fullUrl = append('urn:uuid:', fhir_practitionerRole_id),
            fhir_immunization.performer as fhir_immunization_performer,
            fhir_immunization_performer.actor = create('Reference') as fhir_immunization_performer_actor,
            fhir_immunization_performer_actor.reference = append('urn:uuid:', fhir_practitionerRole_id),
            fhir_immunization_performer_actor.type = 'PractitionerRole' then CdaSubstanceAdministrationToPractitionerRole(cda_substanceAdministration,fhir_practitionerRole,fhir_bundle);
          };

          cda_substanceAdministration.author as cda_author then {

            cda_author -> fhir_bundle.entry as fhir_bundle_entry_04,
            fhir_bundle_entry_04.resource = create('PractitionerRole') as fhir_practionerRole,
            fhir_practionerRole.id = uuid() as fhir_practitioner_id,
            fhir_bundle_entry_04.fullUrl = append('urn:uuid', fhir_practitioner_id),
            fhir_immunization.performer as fhir_immunization_performer,
            fhir_immunization_performer.actor = create('Reference') as fhir_immunization_performer_actor,
            fhir_immunization_performer_actor.reference = append('urn:uuid:', fhir_practitioner_id),
            fhir_immunization_performer_actor.type = 'PractitionerRole',
            fhir_immunization_performer.extension as performerFunctionExtension,
            performerFunctionExtension.url = 'http://hl7.org/fhir/StructureDefinition/event-performerFunction',
            performerFunctionExtension.value = create('CodeableConcept') as performerFunctionCodeableConcept,
            performerFunctionCodeableConcept.coding as performerFunctionCodeableConcept_coding,
            performerFunctionCodeableConcept_coding.system = 'http://terminology.hl7.org/CodeSystem/v3-ParticipationType',
            performerFunctionCodeableConcept_coding.code = 'AUT',   // AUT - author (originator)
            performerFunctionCodeableConcept_coding.display = 'author (originator)' then  CdaAuthorToFhirPractitionerRole(cda_author,fhir_practionerRole,fhir_bundle);

          };
        // informant(Informant Body - 1.2.40.0.34.6.0.11.9.3)
        // cda_substanceAdministration.informant as cda_informant then {
          
        // }
          // Nachtragende Person - participant(Participant Body - Transcriber - 1.2.40.0.34.6.0.11.9.14 )
          cda_substanceAdministration.participant as cda_participant_transcriber where $this.templateId.where(root='1.2.40.0.34.6.0.11.9.14') then {

            cda_participant_transcriber -> fhir_bundle.entry as fhir_bundle_entry_05,
            fhir_bundle_entry_05.resource = create('PractitionerRole') as fhir_practitionerRole,
            fhir_practitionerRole.id = uuid() as fhir_practitioner_id,
            fhir_bundle_entry_05.fullUrl = append('urn:uuid', fhir_practitioner_id),
            fhir_immunization.performer as fhir_immunization_performer,
            fhir_immunization_performer.actor = create('Reference') as fhir_immunization_performer_actor,
            fhir_immunization_performer_actor.reference = append('urn:uuid:', fhir_practitioner_id),
            fhir_immunization_performer_actor.type = 'PractitionerRole',
            fhir_immunization_performer.extension as performerFunctionExtension,
            performerFunctionExtension.url = 'http://hl7.org/fhir/StructureDefinition/event-performerFunction',
            performerFunctionExtension.value = create('CodeableConcept') as performerFunctionCodeableConcept,
            performerFunctionCodeableConcept.coding as performerFunctionCodeableConcept_coding,
            performerFunctionCodeableConcept_coding.system = 'http://terminology.hl7.org/CodeSystem/v3-ParticipationType',
            performerFunctionCodeableConcept_coding.code = 'TRANS',   // AUT - author (originator)
            performerFunctionCodeableConcept_coding.display = 'Transcriber' then CdaParticipantToFhirPractitionerRole(cda_participant_transcriber, fhir_practitionerRole, fhir_bundle);
          };
          // Eintragende Person - participant( Participant Body - Data Enterer - 1.2.40.0.34.6.0.11.9.47)
          cda_substanceAdministration.participant as cda_participant_dataenterer where $this.templateId.where(root='1.2.40.0.34.6.0.11.9.47') then {

            cda_participant_dataenterer -> fhir_bundle.entry as fhir_bundle_entry_06,
            fhir_bundle_entry_06.resource = create('PractitionerRole') as fhir_practitionerRole,
            fhir_practitionerRole.id = uuid() as fhir_practitioner_id,
            fhir_bundle_entry_06.fullUrl = append('urn:uuid', fhir_practitioner_id),
            fhir_immunization.performer as fhir_immunization_performer,
            fhir_immunization_performer.actor = create('Reference') as fhir_immunization_performer_actor,
            fhir_immunization_performer_actor.reference = append('urn:uuid:', fhir_practitioner_id),
            fhir_immunization_performer_actor.type = 'PractitionerRole',
            fhir_immunization_performer.extension as performerFunctionExtension,
            performerFunctionExtension.url = 'http://hl7.org/fhir/StructureDefinition/event-performerFunction',
            performerFunctionExtension.value = create('CodeableConcept') as performerFunctionCodeableConcept,
            performerFunctionCodeableConcept.coding as performerFunctionCodeableConcept_coding,
            performerFunctionCodeableConcept_coding.system = 'http://terminology.hl7.org/CodeSystem/v3-ParticipationType',
            performerFunctionCodeableConcept_coding.code = 'ENT',   // AUT - author (originator)
            performerFunctionCodeableConcept_coding.display = 'data entry person' then CdaParticipantToFhirPractitionerRole(cda_participant_dataenterer, fhir_practitionerRole, fhir_bundle);
          };


          cda_substanceAdministration.entryRelationship as cda_entryRelationship,
          cda_entryRelationship.observation as cda_observation where $this.templateId.where(root='1.2.40.0.34.6.0.11.3.168') then {

            cda_observation where $this.code.where(code='46224007') then{

              cda_observation -> fhir_bundle.entry as fhir_bundle_entry_07,
              fhir_bundle_entry_07.resource = create('Location') as fhir_location,
              fhir_location.id = uuid() as fhir_location_id,
              fhir_bundle_entry_07.fullUrl = append('urn:uuid',fhir_location_id),
              fhir_immunization.location as fhir_immunization_location,
              fhir_immunization_location.reference = append('urn:uuid',fhir_location_id),
              fhir_immunization_location.type = 'Location' then cda_ImpfsettingToFhirImmunizationLocation(cda_observation,fhir_location); 
            }; 
            cda_observation where $this.code.where(code='IS009') then {

              // CD		1…1 M 	//observation/value -> 0..1 AtApsImmunization.fundingSource
              cda_observation.value: CD -> fhir_immunization.fundingSource; 
            };
          };
          




          
         cda_substanceAdministration -> fhir_immunization.protocolApplied as fhir_protocolApplied then {

          //ClinicalDocument/component/structuredBody/component/section/entry/substanceAdministration/entryRelationship
          cda_substanceAdministration.entryRelationship as cda_entryRelationship,
          // ClinicalDocument/component/structuredBody/component/section/entry/substanceAdministration/entryRelationship/observation[templateId[@root='1.2.40.0.34.6.0.11.3.2']]
          cda_entryRelationship.observation as cda_observation where $this.templateId.where(root='1.2.40.0.34.6.0.11.3.2').exists() then {

            // 1…1 M 	//observation/code -> AtApsImmunization.protocolApplied.targetDisease
            cda_observation.code as cda_observation_code -> 
            fhir_protocolApplied.targetDisease as fhir_immunization_targetDisease then CECodeableConcept(cda_observation_code, fhir_immunization_targetDisease);
          };
          
          cda_substanceAdministration.precondition as cda_precondition,
          cda_precondition.criterion as cda_criterion then {
            
            // 1…1 	//criterion/code/@code -> AtApsImmunization.protocolApplied.series
            cda_criterion.code as cda_criterion_code where ($this.nullFlavor.exists().not()), cda_criterion_code.code as code ->
            fhir_protocolApplied.series = cast(code, 'string') as fhir_immunization_series,
            fhir_immunization_series.extension as fhir_series_extension,
            fhir_series_extension.url = 'http://hl7.org/fhir/StructureDefinition/iso21090-codedString',
            // 1…1 	//criterion/code -> AtApsImmunization.protocolApplied.series.Coding
            fhir_series_extension.value = create('Coding') as extension_coding then {

            cda_criterion_code.code as code -> extension_coding.code = cast(code, 'string');
            cda_criterion_code.codeSystem as system -> extension_coding.system = translate(system, '#OIDtoURI', 'code');
            cda_criterion_code.displayName as display -> extension_coding.display = cast(display, 'string');
            // 1…1 R	//criterion/value/@code --> AtApsImmunization.protocolApplied.doseNumber.doseNumberString
            cda_criterion.value as cda_criterion_value, cda_criterion_value.code as value_code -> 
            fhir_protocolApplied.doseNumberString = cast (value_code, 'string') as fhir_immunization_doseNumberString,
            fhir_immunization_doseNumberString.extension as fhir_doseNumber_extension,
            fhir_doseNumber_extension.url = 'http://hl7.org/fhir/StructureDefinition/iso21090-codedString',
            // 1…1 R	//criterion/value/@code --> AtApsImmunization.protocolApplied.doseNumber.doseNumberString.Coding
            fhir_doseNumber_extension.value = create('Coding') as extension_coding then CECoding(cda_criterion_value,extension_coding);

            };
          }; 
        };
      };        
};

  }

group CdaManufacturedMaterialToFhirImmunizationMedication(source cda_manufacturedProduct : ManufacturedProduct, target fhir_immunization : Immunization, target fhir_bundle : Bundle) {
  
  /*//manufacturedProduct/manufacturedMaterial
  cda_manufacturedProduct.manufacturedMaterial as cda_manufacturedMaterial then {
   
  cda_manufacturedMaterial.pharmIngredient as cda_ingredient
      where $this.exists() ->
        fhir_bundle.entry as fhir_bundle_entry_1,
        fhir_bundle_entry_1.resource = create('Medication') as fhir_medication,
        fhir_medication.id = uuid() as fhir_medication_id,
        fhir_bundle_entry_1.fullUrl = append('urn:uuid:', fhir_medication_id),

        fhir_immunization.extension as fhir_administeredProduct_extension,
        fhir_administeredProduct_extension.url = 'http://hl7.org/fhir/5.0/StructureDefinition/extension-Immunization.administeredProduct',
        fhir_administeredProduct_extension.extension as fhir_reference_extension,
        fhir_reference_extension.url = 'reference',
        fhir_reference_extension.value = create('Reference') as fhir_reference_value,
        fhir_reference_value.reference = append('urn:uuid:', fhir_medication_id),
        fhir_reference_value.type = 'Medication' then {
          cda_ingredient.pharmIngredient as cda_ingredient_ingredient then {

            // Noch nicht funktionsbereit. 
            //substanceAdministration//manufacturedProduct/id
            cda_manufacturedProduct.id -> fhir_medication.identifier; 
            // fhir_medication.ingredient as fhir_medication_ingredient,
            // fhir_medication_ingredient.item as fhir_medication_ingredient_item,
            // fhir_medication_ingredient_item.itemCodeableConcept as fhir_medication_ingredient_item_codeableConcept;
               //manufacturedMaterial/pharm:ingredient/pharm:ingredient/pharm:code -> Medication.ingredient.item.itemCodeableConcept.coding
            // //cda_ingredient_ingredient.code -> fhir_medication_ingredient_item_codeableConcept.code;
               0…1	//manufacturedMaterial/pharm:ingredient/pharm:ingredient/pharm:name ->  Medication.ingredient.item.itemCodeableConcept.text
            //cda_ingredient_ingredient.name -> fhir_medication_ingredient_item_codeableConcept.text; 

          };
          
      };
  }; */ 

}

group CdaSectionToFhirSection(source cda_section: Section, target fhir_section, target fhir_bundle: Bundle) {
  
  // section.templateId
  // TODO necessary?
  // section.id
  // TODO extension?
  // section.code
  // TODO mapping on CTS required from https://termgit.elga.gv.at/ValueSet/elga-laborstruktur to http://fhir.ehdsi.eu/laboratory/ValueSet/eHDSILabStudyTypeWithExceptions
  cda_section.code -> fhir_section.code;
  // section.title
  cda_section.title as cda_section_title -> fhir_section.title = (cda_section_title.xmlText) "test";
  // section.text
  cda_section.text as cda_section_text ->
    fhir_section.text as fhir_section_text,
    fhir_section_text.status = 'generated' then {

      // section.text where no section.languageCode exists
      cda_section_text where cda_section.languageCode.exists().not() -> fhir_section_text.div = cda_section_text "asdf";
      // section.text with section.languageCode
      cda_section_text where cda_section.languageCode.exists() then {

        cda_section.languageCode as cda_languageCode then {

          cda_languageCode.code as cda_languageCode_code ->

            // as long as TODO below has not been solved
            fhir_section_text.div = cda_section_text "asdf";
            // TODO fix output:
            //   Currently, the output will look like <div xml:lang="XX"><div xmlns="http://www.w3.org/1999/xhtml">section.text</div></div>
            //   However, the div-tag with the xml:lang should be within the div-tag with the xmlns.
            //
            //  fhir_section_text.div = append('<div xml:lang="', cda_languageCode_code, '">', cda_section_text, '</div>') "asdf";
        };
      } "CdaSectionTextToFhirSectionTextWithLanguage";
    };

  // section.author
  cda_section.author as cda_section_author ->
    // create the PractitionerRole in order to capture the author
    fhir_bundle.entry as fhir_bundle_entry,
    fhir_bundle_entry.resource = create('PractitionerRole') as fhir_practitionerRole,
    fhir_practitionerRole.id = uuid() as fhir_practitionerRole_id,
    fhir_bundle_entry.fullUrl = append('urn:uuid:', fhir_practitionerRole_id),
    fhir_section.author = create('Reference') as fhir_section_author_reference,
    fhir_section_author_reference.reference = append('urn:uuid:', fhir_practitionerRole_id),
    fhir_section_author_reference.type = 'PractitionerRole' then
    CdaAuthorToFhirPractitionerRole(cda_section_author, fhir_practitionerRole, fhir_bundle); //hinzufügen der PractitionerRole

}
group CdaParticipantToFhirPractitionerRole(source cda_participant: Participant2, target fhir_practitionerRole: PractitionerRole, target fhir_bundle: Bundle){
  
  cda_participant -> 
    fhir_bundle.entry as fhir_bundle_entry,
    fhir_bundle_entry.resource = create('Practitioner') as fhir_practitioner,
    fhir_practitioner.id = uuid() as fhir_practitioner_id,
    fhir_bundle_entry.fullUrl = append('urn:uuid:', fhir_practitioner_id),
    fhir_practitionerRole.practitioner = create('Reference') as fhir_practitionerRole_practitioner_reference,
    fhir_practitionerRole_practitioner_reference.reference = append('urn:uuid:', fhir_practitioner_id),
    fhir_practitionerRole_practitioner_reference.type = 'Practitioner' then {

      cda_participant.participantRole as cda_participant_role then {
        
        // 0…*	particpant/participantRole/id ->  0..1	AtApsPractitioner.identifier: GDA-OID 
        cda_participant_role.id where ($this.nullFlavor.exists().not()) -> fhir_practitioner.identifier;
        //0…1	participant/participantRole/addr (Address Compilation - 1.2.40.0.34.6.0.11.9.25)  -> 0..*	AtApsPractitioner.address
        cda_participant_role.addr -> fhir_practitioner.address;
        //0…*	participant/participantRole/telecom -> 0..*	AtApsPractitioner.telecom
        cda_participant_role.telecom -> fhir_practitioner.telecom;
        // Device excluded as of now
        // 0…1	participant/participantRole/playingEntity.name -> 0..*	AtApsPractitioner.name
        // No default transform for name 
        // cda_participant_role.playingEntity as cda_playingEntity,
        // cda_playingEntity.name as cda_playingEntity_name -> fhir_practitioner.name;
        // 0…1	participant/participantRole/scopingEntity -> AtApsOrganization 
        cda_participant_role.scopingEntity as cda_scoping_entity ->
          fhir_bundle.entry as fhir_org_entry,
          fhir_org_entry.resource = create('Organization') as fhir_organization,
          fhir_organization.id = uuid() as fhir_organization_id,
          fhir_org_entry.fullUrl = append('urn:uuid:', fhir_organization_id),
          fhir_practitionerRole.organization = create('Reference') as fhir_org_reference,
          fhir_org_reference.reference = append('urn:uuid:', fhir_organization_id),
          fhir_org_reference.type = 'Organization' then {

            // 0…1	participant/participantRole/scopingEntity/desc -> 0..1	AtApsOrganization.name
            cda_scoping_entity.desc -> fhir_organization.name;
          };
      };
    };
}
group CdaAuthorToFhirPractitionerRole(source cda_author : Author, target fhir_practitionerRole : PractitionerRole, target fhir_bundle : Bundle){
  
  cda_author ->
    // create the Practitioner
    fhir_bundle.entry as fhir_bundle_entry,
    fhir_bundle_entry.resource = create('Practitioner') as fhir_practitioner,
    fhir_practitioner.id = uuid() as fhir_practitioner_id,
    fhir_bundle_entry.fullUrl = append('urn:uuid:', fhir_practitioner_id),
    fhir_practitionerRole.practitioner = create('Reference') as fhir_practitionerRole_practitioner_reference,
    fhir_practitionerRole_practitioner_reference.reference = append('urn:uuid:', fhir_practitioner_id),
    fhir_practitionerRole_practitioner_reference.type = 'Practitioner' then {

      // ClinicalDocument.author.functionCode
      // TODO in CDA no value set is specified for this element, so mapping is not possible as it could be any code
      //      in FHIR (MyHealth@EU Lab) however a required binding for this optional element exits
      // cda_author.functionCode -> fhir_practitionerRole.code;
      // ClinicalDocument.author.time
      // TODO extension?
      // ClinicalDocument.author.time
      // TODO nullFlavor? http://hl7.org/fhir/R4/extension-data-absent-reason.html
      // ClinicalDocument.author.assignedAuthor
      cda_author.assignedAuthor as cda_author_assignedAuthor then {

        // ClinicalDocument.author.assignedAuthor.id
        cda_author_assignedAuthor.id -> fhir_practitioner.identifier;
        // ClinicalDocument.author.assignedAuthor.code
        cda_author_assignedAuthor.code as cda_author_assignedAuthor_code ->
          fhir_practitioner.qualification as fhir_practitioner_qualification,
          fhir_practitioner_qualification.code as fhir_practitioner_qualification_code then
          CECodeableConcept(cda_author_assignedAuthor_code,fhir_practitioner_qualification_code);

        // ClinicalDocument.author.assignedAuthor.telecom
        cda_author_assignedAuthor.telecom -> fhir_practitioner.telecom;
        // ClinicalDocument.author.assignedAuthor.assignedPerson
        cda_author_assignedAuthor.assignedPerson as cda_assignedPerson then {

          cda_assignedPerson.name -> fhir_practitioner.name;
        };
        // TODO Add Assigned Device 
        //cda_author_assignedAuthor.assignedAuthoringDevice as cda_authringDevice -> 
        
        
        // ClinicalDocument.author.assignedAuthor.representedOrganization
        cda_author_assignedAuthor.representedOrganization as cda_representedOrganization ->
          fhir_bundle.entry as fhir_bundle_entry,
          fhir_bundle_entry.resource = create('Organization') as fhir_organization,
          fhir_organization.id = uuid() as fhir_organization_id,
          fhir_bundle_entry.fullUrl = append('urn:uuid:', fhir_organization_id),
          fhir_practitionerRole.organization = create('Reference') as fhir_practitionerRole_organization,
          fhir_practitionerRole_organization.reference = append('urn:uuid:', fhir_organization_id),
          fhir_practitionerRole_organization.type = 'Organization' then
          CdaOrganizationCompilationToFhirOrganization(cda_representedOrganization, fhir_organization);

      };
    } "CdaAuthorToFhirPractitionerRole";
}

group CdaSubstanceAdministrationToPractitionerRole(source cda_substanceAdministration: SubstanceAdministration, target fhir_practitionerRole: PractitionerRole, target fhir_bundle: Bundle) {

  cda_substanceAdministration.performer as cda_performer then {

    cda_performer.assignedEntity as cda_assignedEntity then CdaAssignedEntityToFhirPractitionerRole(cda_assignedEntity, fhir_practitionerRole, fhir_bundle);
  
  }
}

group CdaAssignedEntityToFhirPractitionerRole(source cda_assignedEntity : AssignedEntity, target fhir_practitionerRole : PractitionerRole, target fhir_bundle : Bundle){
  
  cda_assignedEntity ->
    // create the Practitioner
    fhir_bundle.entry as fhir_bundle_entry,
    fhir_bundle_entry.resource = create('Practitioner') as fhir_practitioner,
    fhir_practitioner.id = uuid() as fhir_practitioner_id,
    fhir_bundle_entry.fullUrl = append('urn:uuid:', fhir_practitioner_id),
    fhir_practitionerRole.practitioner = create('Reference') as fhir_practitionerRole_practitioner_reference,
    fhir_practitionerRole_practitioner_reference.reference = append('urn:uuid:', fhir_practitioner_id),
    fhir_practitionerRole_practitioner_reference.type = 'Practitioner' then {

      // assignedEntity.id
      cda_assignedEntity.id -> fhir_practitionerRole.identifier;
      // assignedEntity.code - TODO here "external" laboratories (performer) could be identified - best place?
      // TODO in CDA no value set is specified for this element, so mapping is not possible as it could be any code
      //      in FHIR (MyHealth@EU Lab) however a required binding for this optional element exits
      // cda_assignedEntity.code -> fhir_practitionerRole.code;
      // assignedEntity.addr
      cda_assignedEntity.addr -> fhir_practitioner.address;
      // assignedEntity.telecom
      cda_assignedEntity.telecom -> fhir_practitioner.telecom;
      // assignedEntity.assignedPerson
      cda_assignedEntity.assignedPerson as cda_assignedPerson then {

        // assignedEntity.assignedPerson.name
        cda_assignedPerson.name -> fhir_practitioner.name;
      };

      // assignedEntity.representedOrganization
      cda_assignedEntity.representedOrganization as cda_representedOrganization ->
        fhir_bundle.entry as fhir_bundle_entry,
        fhir_bundle_entry.resource = create('Organization') as fhir_organization,
        fhir_organization.id = uuid() as fhir_organization_id,
        fhir_bundle_entry.fullUrl = append('urn:uuid:', fhir_organization_id),
        fhir_practitionerRole.organization = create('Reference') as fhir_practitionerRole_organization,
        fhir_practitionerRole_organization.reference = append('urn:uuid:', fhir_organization_id),
        fhir_practitionerRole_organization.type = 'Organization' then
        CdaOrganizationCompilationToFhirOrganization(cda_representedOrganization, fhir_organization);
  } "CdaAssignedEntityToFhirPractitionerRole";
}





group cda_ImpfsettingToFhirImmunizationLocation(source cda_observation: Observation, target fhir_immunization_location : Location){

  // ToDo Properly implement ConceptMap so that Location.type.coding is mapped.  
  // cda_observation.value as cda_observation_value, cda_observation_value.code as testcode -> fhir_immunization_location.type = translate(testcode, '#eImpf-ZusatzklassifikationTov3ServiceDeliveryLocationRoleType','Coding');
}